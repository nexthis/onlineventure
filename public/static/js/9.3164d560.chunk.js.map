{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","pages/ShowArticle.tsx","utils/client.ts","hooks/useApi.ts","api/article.ts","utils/data.ts"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","ShowArticle","id","useParams","useApi","getArticle","articleApi","item","md","xs","style","marginTop","variant","title","color","author","map","nickname","join","text","dateFormat","created_at","axios","create","baseURL","process","params","api_token","localStorage","getItem","api","useState","data","setData","isLoading","setIsLoading","isError","setIsError","changeData","fetchData","a","prams","result","console","log","useEffect","getArticles","get","getTopArticles","getUserArticles","nick","value","format","day","month","year","hour","minute","timeZone","Date","toLocaleString"],"mappings":"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","file":"static/js/9.3164d560.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from \"react\";\r\nimport { Container, Grid, Card, CardContent, Typography,CardActions,Button } from \"@material-ui/core\"\r\n\r\nimport {dateFormat} from 'utils/data'\r\nimport { useApi } from 'hooks/useApi'\r\nimport { getArticle } from 'api/article'\r\n\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst ShowArticle = () => {\r\n    const { id } = useParams();\r\n    const [articleApi] = useApi<typeof getArticle>(getArticle, id)\r\n\r\n    return (\r\n        <Container>\r\n            <Grid item md={12} xs={12}>\r\n                <Card style={{marginTop: 40}}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {articleApi?.title}\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            Autorzy:  {articleApi?.author.map(articleApi => articleApi?.nickname).join(', ')}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            {articleApi?.text}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Utworzono: {dateFormat(articleApi ? articleApi.created_at : '')}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShowArticle;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n    /* other custom settings */\n    params:{\n        api_token: localStorage.getItem('api_token')\n    }\n});\n\n","import {useState, useEffect} from 'react';\n\n\ntype ArgsType<T> = T extends (...args: infer U) => any ? U : never;\ntype ThenArg<T> = T extends PromiseLike<infer U> ? U : T\n\n\ntype ReturnArg <T> = [\n  ///@ts-ignore\n  ThenArg<ReturnType<T>>, \n  {isLoading: boolean, isError:boolean }, \n  {\n    fetchData: (props?:ArgsType<T>) => void,\n     ///@ts-ignore\n    changeData: (fn:( data: ThenArg<ReturnType<T>>) => ThenArg<ReturnType<T>> )=> void\n  }\n]\n\n\nexport const useApi  = <T extends Function> (api: T, ...props:ArgsType<T>): ReturnArg<T>  => {\n\n    const [data, setData] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n    \n    const changeData = (item:any) =>{\n      ///@ts-ignore\n      setData(item(data));\n    }\n\n\n    const fetchData = async (prams = props) => {\n      setIsError(false);\n      setIsLoading(true);\n      try {\n        const result = await api(...prams)\n        setData(result);\n      } catch (error) {\n        console.log(error);\n        setIsError(true);\n      }\n \n      setIsLoading(false)\n    };\n\n    useEffect(() => {\n      fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    ///@ts-ignore\n    return [ data, {isLoading, isError }, {fetchData, changeData}];\n};","import axios from 'utils/client';\r\nimport { UserApi } from 'global';\r\n\r\nexport interface ArticlesInterface {\r\n    id: number,\r\n    title: string,\r\n    text: string,\r\n    author: Array<UserApi>\r\n    created_at: string,\r\n    updated_at: string,\r\n}\r\n\r\nexport async function getArticles() {\r\n    try {\r\n        const { data } = await axios.get<Array<ArticlesInterface>>('articles')\r\n        return data;\r\n    }\r\n    catch{\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getArticle(id: number | number = 1) {\r\n    try {\r\n        const { data } = await axios.get<ArticlesInterface>(`article/${id}`)\r\n        return data;\r\n    }\r\n    catch{\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getTopArticles() {\r\n    try {\r\n        const { data } = await axios.get<Array<UserApi>>('/articles/most-polular-of-the-week')\r\n        return data;\r\n    }\r\n    catch{\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getUserArticles(nick: string) {\r\n    try {\r\n        const { data } = await axios.get<Array<ArticlesInterface>>(`/articles/user/${nick}`)\r\n        return data;\r\n    }\r\n    catch{\r\n        return null\r\n    }\r\n}\r\n","/**\n * @param {string} value \n * @param {Intl.DateTimeFormatOptions} format \n */\nexport function dateFormat(\n    value: number | string | Date,\n    format: Intl.DateTimeFormatOptions = { day: 'numeric' , month: 'short', year: 'numeric', hour: 'numeric', minute: 'numeric' }) {\n        format.timeZone = 'UTC';\n    return new Date(value).toLocaleString('pl-PL', format);\n}"],"sourceRoot":""}