{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","pages/Home.tsx","utils/client.ts","hooks/useApi.ts","api/article.ts","utils/data.ts","../node_modules/@material-ui/core/esm/styles/makeStyles.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","spacing","display","alignItems","marginLeft","useStyles","makeStyles","theme","top","marginTop","card","height","Home","useApi","getTopArticles","topArticlesApi","getArticles","articlesApi","Link","to","variant","align","length","container","map","item","index","key","md","xs","color","surname","nickname","size","title","author","join","text","substring","dateFormat","created_at","id","axios","create","baseURL","process","params","api_token","localStorage","getItem","api","useState","data","setData","isLoading","setIsLoading","isError","setIsError","changeData","fetchData","a","prams","result","console","log","useEffect","get","getArticle","getUserArticles","nick","value","format","day","month","year","hour","minute","timeZone","Date","toLocaleString","stylesOrCreator","options","arguments","undefined","makeStylesWithoutDefault","defaultTheme"],"mappings":"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","file":"static/js/7.565a5b78.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from \"react\";\r\nimport { Container, Card, CardContent, CardActions, Grid, Typography, Button } from \"@material-ui/core\"\r\nimport {Link} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useApi } from 'hooks/useApi'\r\nimport {dateFormat} from 'utils/data'\r\nimport { getArticles, getTopArticles } from 'api/article'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    top: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    card: {\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const [topArticlesApi] = useApi<typeof getTopArticles>(getTopArticles)\r\n    const [articlesApi] = useApi<typeof getArticles>(getArticles)\r\n    \r\n    return (\r\n        <Container>\r\n\r\n            <Button component={Link} to={'/panel'} className={classes.top} variant=\"contained\">Dodaj Post</Button>\r\n\r\n            <Typography className={classes.top} align={\"center\"} variant=\"h5\" component=\"h2\">Top {topArticlesApi?.length} użytkowników</Typography>\r\n            <Grid className={classes.top} container spacing={3}>\r\n                {topArticlesApi?.map((item, index) =>\r\n                    <Grid key={index} item md={4} xs={6}>\r\n                        <Card className={classes.card} >\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    {item.name}\r\n                                </Typography>\r\n                                <Typography color=\"textSecondary\">\r\n                                    {item.surname}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    {item.nickname}\r\n                                </Typography>\r\n    \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button component={Link} to={`/articles/user/${item.nickname}/`} size=\"small\">Zobacz więcej</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            \r\n            <Typography className={classes.top} align={\"center\"} variant=\"h5\" component=\"h2\">Inne</Typography>\r\n            <Grid container spacing={3}>\r\n\r\n                {articlesApi?.map((item, index) =>\r\n                    <Grid key={index} item md={4} xs={12}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    {item.title}\r\n                                </Typography>\r\n                                <Typography color=\"textSecondary\">\r\n                                    Autorzy:  {item.author.map(item => item.nickname).join(', ')}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    {item.text.substring(0, 50)}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    Utworzono: {dateFormat(item.created_at)}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button component={Link} to={`/article/${item.id}`} size=\"small\">Zobacz więcej</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                )}\r\n\r\n            </Grid>\r\n            \r\n        </Container>\r\n    )\r\n}\r\nexport default Home;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n    /* other custom settings */\n    params:{\n        api_token: localStorage.getItem('api_token')\n    }\n});\n\n","import {useState, useEffect} from 'react';\n\n\ntype ArgsType<T> = T extends (...args: infer U) => any ? U : never;\ntype ThenArg<T> = T extends PromiseLike<infer U> ? U : T\n\n\ntype ReturnArg <T> = [\n  ///@ts-ignore\n  ThenArg<ReturnType<T>>, \n  {isLoading: boolean, isError:boolean }, \n  {\n    fetchData: (props?:ArgsType<T>) => void,\n     ///@ts-ignore\n    changeData: (fn:( data: ThenArg<ReturnType<T>>) => ThenArg<ReturnType<T>> )=> void\n  }\n]\n\n\nexport const useApi  = <T extends Function> (api: T, ...props:ArgsType<T>): ReturnArg<T>  => {\n\n    const [data, setData] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n    \n    const changeData = (item:any) =>{\n      ///@ts-ignore\n      setData(item(data));\n    }\n\n\n    const fetchData = async (prams = props) => {\n      setIsError(false);\n      setIsLoading(true);\n      try {\n        const result = await api(...prams)\n        setData(result);\n      } catch (error) {\n        console.log(error);\n        setIsError(true);\n      }\n \n      setIsLoading(false)\n    };\n\n    useEffect(() => {\n      fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    ///@ts-ignore\n    return [ data, {isLoading, isError }, {fetchData, changeData}];\n};","import axios from 'utils/client';\r\nimport { UserApi } from 'global';\r\n\r\nexport interface ArticlesInterface {\r\n    id: number,\r\n    title: string,\r\n    text: string,\r\n    author: Array<UserApi>\r\n    created_at: string,\r\n    updated_at: string,\r\n}\r\n\r\nexport async function getArticles() {\r\n    try {\r\n        const { data } = await axios.get<Array<ArticlesInterface>>('articles')\r\n        return data;\r\n    }\r\n    catch{\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getArticle(id: number | number = 1) {\r\n    try {\r\n        const { data } = await axios.get<ArticlesInterface>(`article/${id}`)\r\n        return data;\r\n    }\r\n    catch{\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getTopArticles() {\r\n    try {\r\n        const { data } = await axios.get<Array<UserApi>>('/articles/most-polular-of-the-week')\r\n        return data;\r\n    }\r\n    catch{\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getUserArticles(nick: string) {\r\n    try {\r\n        const { data } = await axios.get<Array<ArticlesInterface>>(`/articles/user/${nick}`)\r\n        return data;\r\n    }\r\n    catch{\r\n        return null\r\n    }\r\n}\r\n","/**\n * @param {string} value \n * @param {Intl.DateTimeFormatOptions} format \n */\nexport function dateFormat(\n    value: number | string | Date,\n    format: Intl.DateTimeFormatOptions = { day: 'numeric' , month: 'short', year: 'numeric', hour: 'numeric', minute: 'numeric' }) {\n        format.timeZone = 'UTC';\n    return new Date(value).toLocaleString('pl-PL', format);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;"],"sourceRoot":""}